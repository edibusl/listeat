package com.listeat.models;

import com.listeat.helpers.CustomDateDeserializer;
import com.listeat.helpers.CustomDateSerializer;
import lombok.AccessLevel;
import lombok.Data;
import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.map.annotate.JsonDeserialize;
import org.codehaus.jackson.map.annotate.JsonSerialize;

import javax.persistence.*;
import java.sql.Date;
import java.util.List;

@Entity
@Table(name = "carts")
@Data
public class Cart {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long cart_id;

    private Long glist_id;

    //We disable lombok here since we need to set a custom field with vars (JsonSerializable) on the getter
    @lombok.Getter(AccessLevel.NONE)
    @lombok.Setter(AccessLevel.NONE)
    private Date purchase_date;
    @JsonSerialize(using = CustomDateSerializer.class)
    public Date getPurchase_date() {return this.purchase_date;}
    @JsonDeserialize(using = CustomDateDeserializer.class)
    public void setPurchase_date(Date purchase_date) { this.purchase_date = purchase_date;}

    //To ignore this field when serializing to Json (A jackson's JsonIgnore field will be put on the setter that's generated by lombok)
    @JsonIgnore @lombok.Getter(onMethod = @__(@JsonIgnore))
    @OneToMany(mappedBy = "cart")
    public List<GItem> gitems;
}
